/**
 * Animations & Effects
 * 애니메이션 및 시각 효과 정의
 */

/* ===== CSS Variables for Animations ===== */
:root {
  --animation-speed-slow: 1s;
  --animation-speed-normal: 0.5s;
  --animation-speed-fast: 0.3s;
  --animation-speed-ultrafast: 0.15s;
  
  --bounce-easing: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --ease-out-quart: cubic-bezier(0.25, 1, 0.5, 1);
  --ease-in-out-circ: cubic-bezier(0.85, 0, 0.15, 1);
}

/* ===== Keyframe Animations ===== */

/* Fade Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Scale Animations */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8);
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes zoomOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(0.3);
  }
  to {
    opacity: 0;
    transform: scale(0.3);
  }
}

/* Slide Animations */
@keyframes slideInUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideOutUp {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

@keyframes slideOutDown {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(100%);
  }
}

/* Rotation Animations */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-200deg);
  }
  to {
    opacity: 1;
    transform: rotate(0);
  }
}

@keyframes rotateOut {
  from {
    opacity: 1;
    transform: rotate(0);
  }
  to {
    opacity: 0;
    transform: rotate(200deg);
  }
}

/* Bounce Animations */
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

@keyframes bounceIn {
  from, 20%, 40%, 60%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }
  0% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }
  40% {
    transform: scale3d(.9, .9, .9);
  }
  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }
  80% {
    transform: scale3d(.97, .97, .97);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

/* Shake Animation */
@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }
  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }
  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

/* Pulse Animation */
@keyframes pulse {
  0% {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

/* Glow Animation */
@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px var(--color-primary-500);
  }
  50% {
    box-shadow: 0 0 20px var(--color-primary-500), 0 0 30px var(--color-primary-500);
  }
}

/* Typing Animation */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink {
  0%, 50% {
    border-color: transparent;
  }
  51%, 100% {
    border-color: var(--text-primary);
  }
}

/* Float Animation */
@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes floatReverse {
  0%, 100% {
    transform: translateY(-20px);
  }
  50% {
    transform: translateY(0px);
  }
}

/* Wave Animation */
@keyframes wave {
  0%, 100% {
    transform: rotate(0deg);
  }
  10%, 30% {
    transform: rotate(14deg);
  }
  20% {
    transform: rotate(-8deg);
  }
  40% {
    transform: rotate(-4deg);
  }
  50% {
    transform: rotate(10deg);
  }
  60% {
    transform: rotate(0deg);
  }
}

/* Wobble Animation */
@keyframes wobble {
  0% {
    transform: none;
  }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }
  100% {
    transform: none;
  }
}

/* Progress Bar Animation */
@keyframes progressBar {
  from {
    width: 0%;
  }
  to {
    width: var(--progress-width, 100%);
  }
}

/* Gradient Animation */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Equalizer Animation */
@keyframes equalizer1 {
  0%, 100% {
    height: 10px;
  }
  50% {
    height: 25px;
  }
}

@keyframes equalizer2 {
  0%, 100% {
    height: 15px;
  }
  25% {
    height: 30px;
  }
  75% {
    height: 8px;
  }
}

@keyframes equalizer3 {
  0%, 100% {
    height: 20px;
  }
  33% {
    height: 12px;
  }
  66% {
    height: 28px;
  }
}

@keyframes equalizer4 {
  0%, 100% {
    height: 8px;
  }
  40% {
    height: 22px;
  }
  80% {
    height: 18px;
  }
}

/* Loading Spinner */
@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

/* Reveal Animations */
@keyframes revealLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes revealRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes revealUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes revealDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

/* ===== Animation Classes ===== */

/* Fade Animations */
.animate-fadeIn {
  animation: fadeIn var(--animation-speed-normal) ease-out;
}

.animate-fadeOut {
  animation: fadeOut var(--animation-speed-normal) ease-out;
}

.animate-fadeInUp {
  animation: fadeInUp var(--animation-speed-normal) ease-out;
}

.animate-fadeInDown {
  animation: fadeInDown var(--animation-speed-normal) ease-out;
}

.animate-fadeInLeft {
  animation: fadeInLeft var(--animation-speed-normal) ease-out;
}

.animate-fadeInRight {
  animation: fadeInRight var(--animation-speed-normal) ease-out;
}

/* Scale Animations */
.animate-scaleIn {
  animation: scaleIn var(--animation-speed-normal) var(--bounce-easing);
}

.animate-scaleOut {
  animation: scaleOut var(--animation-speed-normal) ease-in;
}

.animate-zoomIn {
  animation: zoomIn var(--animation-speed-normal) ease-out;
}

.animate-zoomOut {
  animation: zoomOut var(--animation-speed-normal) ease-in;
}

/* Slide Animations */
.animate-slideInUp {
  animation: slideInUp var(--animation-speed-normal) var(--ease-out-quart);
}

.animate-slideInDown {
  animation: slideInDown var(--animation-speed-normal) var(--ease-out-quart);
}

.animate-slideInLeft {
  animation: slideInLeft var(--animation-speed-normal) var(--ease-out-quart);
}

.animate-slideInRight {
  animation: slideInRight var(--animation-speed-normal) var(--ease-out-quart);
}

.animate-slideOutUp {
  animation: slideOutUp var(--animation-speed-normal) ease-in;
}

.animate-slideOutDown {
  animation: slideOutDown var(--animation-speed-normal) ease-in;
}

/* Rotation Animations */
.animate-rotate {
  animation: rotate 2s linear infinite;
}

.animate-rotateIn {
  animation: rotateIn var(--animation-speed-normal) ease-out;
}

.animate-rotateOut {
  animation: rotateOut var(--animation-speed-normal) ease-in;
}

/* Bounce Animations */
.animate-bounce {
  animation: bounce 2s infinite;
}

.animate-bounceIn {
  animation: bounceIn var(--animation-speed-slow) var(--bounce-easing);
}

/* Interactive Animations */
.animate-shake {
  animation: shake var(--animation-speed-normal) ease-in-out;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite alternate;
}

.animate-wave {
  animation: wave 2.5s ease-in-out infinite;
  transform-origin: 70% 70%;
}

.animate-wobble {
  animation: wobble 1s ease-in-out;
}

/* Continuous Animations */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-floatReverse {
  animation: floatReverse 6s ease-in-out infinite;
}

.animate-gradientShift {
  background: linear-gradient(-45deg, var(--color-primary-400), var(--color-primary-600), var(--color-accent-400), var(--color-accent-600));
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
}

/* Typing Animation */
.animate-typing {
  overflow: hidden;
  border-right: 2px solid var(--text-primary);
  white-space: nowrap;
  animation: typing 3.5s steps(40, end), blink 0.75s step-end infinite;
}

/* Progress Animation */
.animate-progress {
  animation: progressBar 2s ease-out forwards;
}

/* Equalizer Animation */
.animate-equalizer .bar:nth-child(1) {
  animation: equalizer1 1.5s ease-in-out infinite;
}

.animate-equalizer .bar:nth-child(2) {
  animation: equalizer2 1.5s ease-in-out infinite 0.2s;
}

.animate-equalizer .bar:nth-child(3) {
  animation: equalizer3 1.5s ease-in-out infinite 0.4s;
}

.animate-equalizer .bar:nth-child(4) {
  animation: equalizer4 1.5s ease-in-out infinite 0.6s;
}

/* Loading Animations */
.animate-spinner {
  animation: spinner 1s linear infinite;
}

.animate-ripple {
  animation: ripple 1s ease-out infinite;
}

/* ===== Hover Effects ===== */
.hover-lift {
  transition: transform var(--animation-speed-fast) ease-out;
}

.hover-lift:hover {
  transform: translateY(-5px);
}

.hover-scale {
  transition: transform var(--animation-speed-fast) ease-out;
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-rotate {
  transition: transform var(--animation-speed-fast) ease-out;
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

.hover-glow {
  transition: box-shadow var(--animation-speed-fast) ease-out;
}

.hover-glow:hover {
  box-shadow: 0 0 20px var(--color-primary-500);
}

.hover-brighten {
  transition: filter var(--animation-speed-fast) ease-out;
}

.hover-brighten:hover {
  filter: brightness(1.1);
}

.hover-blur {
  transition: filter var(--animation-speed-fast) ease-out;
}

.hover-blur:hover {
  filter: blur(2px);
}

/* ===== Loading States ===== */
.loading {
  position: relative;
  overflow: hidden;
}

.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  animation: loading-shimmer 1.5s infinite;
}

@keyframes loading-shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

.skeleton {
  background: linear-gradient(
    90deg,
    var(--color-gray-200) 25%,
    var(--color-gray-300) 50%,
    var(--color-gray-200) 75%
  );
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* ===== Stagger Animations ===== */
.stagger-fadeInUp > *:nth-child(1) { animation-delay: 0.1s; }
.stagger-fadeInUp > *:nth-child(2) { animation-delay: 0.2s; }
.stagger-fadeInUp > *:nth-child(3) { animation-delay: 0.3s; }
.stagger-fadeInUp > *:nth-child(4) { animation-delay: 0.4s; }
.stagger-fadeInUp > *:nth-child(5) { animation-delay: 0.5s; }
.stagger-fadeInUp > *:nth-child(6) { animation-delay: 0.6s; }

.stagger-scaleIn > *:nth-child(1) { animation-delay: 0.1s; }
.stagger-scaleIn > *:nth-child(2) { animation-delay: 0.15s; }
.stagger-scaleIn > *:nth-child(3) { animation-delay: 0.2s; }
.stagger-scaleIn > *:nth-child(4) { animation-delay: 0.25s; }
.stagger-scaleIn > *:nth-child(5) { animation-delay: 0.3s; }
.stagger-scaleIn > *:nth-child(6) { animation-delay: 0.35s; }

/* ===== Scroll Animations ===== */
.scroll-reveal {
  opacity: 0;
  transform: translateY(50px);
  transition: all 0.8s ease-out;
}

.scroll-reveal.revealed {
  opacity: 1;
  transform: translateY(0);
}

.scroll-reveal-left {
  opacity: 0;
  transform: translateX(-50px);
  transition: all 0.8s ease-out;
}

.scroll-reveal-left.revealed {
  opacity: 1;
  transform: translateX(0);
}

.scroll-reveal-right {
  opacity: 0;
  transform: translateX(50px);
  transition: all 0.8s ease-out;
}

.scroll-reveal-right.revealed {
  opacity: 1;
  transform: translateX(0);
}

.scroll-reveal-scale {
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.8s ease-out;
}

.scroll-reveal-scale.revealed {
  opacity: 1;
  transform: scale(1);
}

/* ===== Parallax Effects ===== */
.parallax {
  transform: translateZ(0);
  will-change: transform;
}

/* ===== Particle Effects ===== */
.particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--color-primary-500);
  border-radius: 50%;
  opacity: 0.6;
  animation: particle-float 10s linear infinite;
}

@keyframes particle-float {
  0% {
    transform: translateY(100vh) translateX(0);
    opacity: 0;
  }
  10% {
    opacity: 0.6;
  }
  90% {
    opacity: 0.6;
  }
  100% {
    transform: translateY(-10vh) translateX(100px);
    opacity: 0;
  }
}

/* ===== Performance Optimizations ===== */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.will-change-scroll {
  will-change: scroll-position;
}

.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* ===== Accessibility ===== */
@media (prefers-reduced-motion: reduce) {
  .animate-fadeIn,
  .animate-fadeOut,
  .animate-fadeInUp,
  .animate-fadeInDown,
  .animate-fadeInLeft,
  .animate-fadeInRight,
  .animate-scaleIn,
  .animate-scaleOut,
  .animate-zoomIn,
  .animate-zoomOut,
  .animate-slideInUp,
  .animate-slideInDown,
  .animate-slideInLeft,
  .animate-slideInRight,
  .animate-slideOutUp,
  .animate-slideOutDown,
  .animate-rotateIn,
  .animate-rotateOut,
  .animate-bounceIn,
  .scroll-reveal,
  .scroll-reveal-left,
  .scroll-reveal-right,
  .scroll-reveal-scale {
    animation: none !important;
    transition: none !important;
    opacity: 1 !important;
    transform: none !important;
  }
  
  .animate-rotate,
  .animate-bounce,
  .animate-pulse,
  .animate-glow,
  .animate-wave,
  .animate-wobble,
  .animate-float,
  .animate-floatReverse,
  .animate-gradientShift,
  .animate-typing,
  .animate-equalizer .bar,
  .animate-spinner,
  .animate-ripple {
    animation: none !important;
  }
  
  .loading::after,
  .skeleton {
    animation: none !important;
  }
}

/* ===== Dark Mode Animations ===== */
[data-theme="dark"] .skeleton {
  background: linear-gradient(
    90deg,
    var(--color-gray-700) 25%,
    var(--color-gray-600) 50%,
    var(--color-gray-700) 75%
  );
  background-size: 200% 100%;
}

[data-theme="dark"] .loading::after {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
}

/* ===== Animation Utilities ===== */
.animation-delay-100 { animation-delay: 0.1s; }
.animation-delay-200 { animation-delay: 0.2s; }
.animation-delay-300 { animation-delay: 0.3s; }
.animation-delay-500 { animation-delay: 0.5s; }
.animation-delay-700 { animation-delay: 0.7s; }
.animation-delay-1000 { animation-delay: 1s; }

.animation-duration-fast { animation-duration: var(--animation-speed-fast); }
.animation-duration-normal { animation-duration: var(--animation-speed-normal); }
.animation-duration-slow { animation-duration: var(--animation-speed-slow); }

.animation-fill-forwards { animation-fill-mode: forwards; }
.animation-fill-backwards { animation-fill-mode: backwards; }
.animation-fill-both { animation-fill-mode: both; }

.animation-infinite { animation-iteration-count: infinite; }
.animation-once { animation-iteration-count: 1; }

.animation-paused { animation-play-state: paused; }
.animation-running { animation-play-state: running; }